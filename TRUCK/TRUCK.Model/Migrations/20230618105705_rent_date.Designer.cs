// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRUCK.Model.Context;

namespace TRUCK.Model.Migrations
{
    [DbContext(typeof(TRUCKContext))]
    [Migration("20230618105705_rent_date")]
    partial class rent_date
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TRUCK.Model.Entities.AdminUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("TRUCK.Model.Entities.Sales", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientMobileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Day")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<bool>("Oparetor")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<DateTime>("RentDate")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPrice")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("WorkMachineID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WorkMachineID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("TRUCK.Model.Entities.WorkMachine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DailyPrice")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("WorkMachineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("WorkMachines");
                });

            modelBuilder.Entity("TRUCK.Model.Entities.Sales", b =>
                {
                    b.HasOne("TRUCK.Model.Entities.WorkMachine", "WorkMachine")
                        .WithMany()
                        .HasForeignKey("WorkMachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkMachine");
                });
#pragma warning restore 612, 618
        }
    }
}
